/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import aplicacion.*;
import java.sql.Timestamp;

/**
 *
 * @author slimbbok
 */
public class VprincipalAdministrador extends javax.swing.JFrame {
    
    private java.util.List<Usuario> usuarios;
    private java.util.List<Grado> grados;
    private aplicacion.FachadaAplicacion fa;
    private java.util.List<Bloque> bloques;
    private Administrador administrador;
    //REFERENCIA AL PADRE CUANDO SE INSTALE EN LA POSICON FINAL DE LA APLICACION
//    private VPrincipal padre;       mirar en libro como lo hace guay
    
    /**
     * Creates new form VprincipalAdministrador
     */
    public VprincipalAdministrador( /*java.awt.Frame parent, boolean modal,*/ aplicacion.FachadaAplicacion fa,java.util.List<Grado> grados,java.util.List<Usuario> usuarios) {
        /*super(parent, modal);*/
        this.fa=fa;
        initComponents();
        
        this.usuarios=usuarios;
        this.grados=grados;
        
        ModeloTablaGrados mTablaGrados = new ModeloTablaGrados();
        tablaGrados.setModel(mTablaGrados);
        mTablaGrados.setFilas(this.grados);
        if (mTablaGrados.getRowCount() > 0) {
            tablaGrados.setRowSelectionInterval(0, 0);
            Grado gr = this.grados.get(tablaGrados.getSelectedRow());
            txtCodigo.setText(gr.getCodigo());
            txtNombre.setText(gr.getNombre());
        }else btnBorrar.setEnabled(false);
        btnGuardar.setEnabled(false);
        btnBuscar.setEnabled(false);
        btnBorrarUsuario.setEnabled(false);
        comboBox1.setEnabled(false);
        comboBox2.setEnabled(false);
        
        ModeloTablaUsuarios mTablaUsuarios = new ModeloTablaUsuarios();
        tablaUsuarios.setModel(mTablaUsuarios);
        mTablaUsuarios.setFilas(this.usuarios);
        if (mTablaUsuarios.getRowCount() > 0) {
            tablaUsuarios.setRowSelectionInterval(0, 0);
            Usuario user = this.usuarios.get(tablaUsuarios.getSelectedRow());
            txtDniUsurio.setText(user.getDni());
            txtNombreUsuario.setText(user.getNombre());
            txtCorreoUsuario.setText(user.getCorreo());
            if(user instanceof Alumno){
                    comboBoxUsuario.setSelectedIndex(1);
                    comboBox1.setEnabled(true);
                    labelCombobox1.setText("Grados :");
                    for(Grado gra:grados) comboBox1.addItem(gra.toString());
                    for(int i=0;i<grados.size();i++) if(grados.get(i).getCodigo().equalsIgnoreCase(((Alumno) user).getGrado())) comboBox1.setSelectedIndex(i+1);
            }else if(user instanceof Profesor){
                    comboBoxUsuario.setSelectedIndex(2);
                    labelCombobox1.setText("Bloques :");
                    this.bloques = fa.ConsultarBloques("", "", "");
                    for(Bloque gra:bloques) comboBox1.addItem(gra.toString());
                    for(int i=0;i<bloques.size();i++) if(bloques.get(i).getNombre().equalsIgnoreCase(((Profesor) user).getBloqueAsociado())) comboBox1.setSelectedIndex(i+1);
            }else if(user instanceof Administrador)
                    comboBoxUsuario.setSelectedIndex(3);
            else comboBoxUsuario.setSelectedIndex(0);
            btnBorrarUsuario.setEnabled(true);
        }
        btnGuardar.setText("Modificar");
        btnAnadirUsuario.setEnabled(false);
        btnModificarUsuario.setEnabled(false);
        comboBox1.setEnabled(true);
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaGrados = new javax.swing.JTable();
        txtNombre = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnGuardar = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        btnBorrar = new javax.swing.JButton();
        btnCorreo = new javax.swing.JButton();
        pestanaUsuarios = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaUsuarios = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        btnAnadirUsuario = new javax.swing.JButton();
        btnBorrarUsuario = new javax.swing.JButton();
        btnModificarUsuario = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtDniUsurio = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtNombreUsuario = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtCorreoUsuario = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        comboBoxUsuario = new javax.swing.JComboBox<>();
        btnFiltrarUsuarios = new javax.swing.JButton();
        labelCombobox1 = new javax.swing.JLabel();
        comboBox1 = new javax.swing.JComboBox<>();
        labelCombobox2 = new javax.swing.JLabel();
        comboBox2 = new javax.swing.JComboBox<>();
        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();
        jComboBox3 = new javax.swing.JComboBox<>();
        btnSalir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel2.setText("Nombre:");

        tablaGrados.setModel(new ModeloTablaGrados());
        tablaGrados.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tablaGrados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaGradosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaGrados);

        txtNombre.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                txtNombreInputMethodTextChanged(evt);
            }
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
        });
        txtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreActionPerformed(evt);
            }
        });
        txtNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombreKeyTyped(evt);
            }
        });

        jLabel3.setText("CÃ³digo:");

        txtCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodigoActionPerformed(evt);
            }
        });
        txtCodigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCodigoKeyTyped(evt);
            }
        });

        jLabel1.setText("Grados");

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnBuscar.setText("Buscar");

        btnBorrar.setText("Borrar");
        btnBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarActionPerformed(evt);
            }
        });

        btnCorreo.setText("Correo");
        btnCorreo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCorreoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(109, 109, 109)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 192, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGap(18, 18, 18)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(btnCorreo)
                        .addContainerGap())))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(37, 37, 37)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnBuscar)
                            .addComponent(btnGuardar)
                            .addComponent(btnBorrar))
                        .addGap(140, 140, 140))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(btnCorreo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        jTabbedPane.addTab("Grados", jPanel2);

        tablaUsuarios.setModel(new ModeloTablaUsuarios());
        tablaUsuarios.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tablaUsuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaUsuariosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tablaUsuarios);

        jLabel4.setText("Usuarios");

        btnAnadirUsuario.setText("AÃ±adir");
        btnAnadirUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnadirUsuarioActionPerformed(evt);
            }
        });

        btnBorrarUsuario.setText("Borrar");
        btnBorrarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarUsuarioActionPerformed(evt);
            }
        });

        btnModificarUsuario.setText("Modificar");

        jLabel5.setText("D.N.I. :");

        txtDniUsurio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDniUsurioActionPerformed(evt);
            }
        });
        txtDniUsurio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDniUsurioKeyTyped(evt);
            }
        });

        jLabel6.setText("Nombre :");

        txtNombreUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreUsuarioActionPerformed(evt);
            }
        });
        txtNombreUsuario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombreUsuarioKeyTyped(evt);
            }
        });

        jLabel7.setText("Correo :");

        txtCorreoUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCorreoUsuarioActionPerformed(evt);
            }
        });
        txtCorreoUsuario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCorreoUsuarioKeyTyped(evt);
            }
        });

        jLabel8.setText("Rol :");

        comboBoxUsuario.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "", "Alumno", "Profesor", "Administrador" }));
        comboBoxUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxUsuarioActionPerformed(evt);
            }
        });

        btnFiltrarUsuarios.setText("Filtrar");

        labelCombobox1.setText("Defecto :");

        comboBox1.setMaximumRowCount(300);
        comboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        comboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBox1ActionPerformed(evt);
            }
        });

        labelCombobox2.setText("Defecto :");

        comboBox2.setMaximumRowCount(300);
        comboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        comboBox2.setEnabled(false);
        comboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBox2ActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "Enero", "Febrero", "Marzo", "Abril", "Mallo", "Junio", "Julio", "Agosto", "Semptiembre", "Octubre", "Noviembre", "Diciembre" }));

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout pestanaUsuariosLayout = new javax.swing.GroupLayout(pestanaUsuarios);
        pestanaUsuarios.setLayout(pestanaUsuariosLayout);
        pestanaUsuariosLayout.setHorizontalGroup(
            pestanaUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pestanaUsuariosLayout.createSequentialGroup()
                .addGroup(pestanaUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pestanaUsuariosLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pestanaUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pestanaUsuariosLayout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtDniUsurio))
                            .addComponent(txtNombreUsuario, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtCorreoUsuario)
                            .addGroup(pestanaUsuariosLayout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(comboBoxUsuario, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(comboBox1, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(pestanaUsuariosLayout.createSequentialGroup()
                                .addGroup(pestanaUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel6)
                                    .addGroup(pestanaUsuariosLayout.createSequentialGroup()
                                        .addGroup(pestanaUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(btnModificarUsuario, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE)
                                            .addComponent(btnAnadirUsuario, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(pestanaUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(btnBorrarUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                                            .addComponent(btnFiltrarUsuarios, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addComponent(labelCombobox1)
                                    .addComponent(labelCombobox2))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(comboBox2, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(pestanaUsuariosLayout.createSequentialGroup()
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(pestanaUsuariosLayout.createSequentialGroup()
                        .addGap(204, 204, 204)
                        .addComponent(jLabel4)))
                .addContainerGap())
        );
        pestanaUsuariosLayout.setVerticalGroup(
            pestanaUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pestanaUsuariosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addGroup(pestanaUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pestanaUsuariosLayout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(pestanaUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtDniUsurio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNombreUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCorreoUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pestanaUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(comboBoxUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pestanaUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelCombobox1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelCombobox2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                        .addComponent(comboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pestanaUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAnadirUsuario)
                            .addComponent(btnBorrarUsuario))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pestanaUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnFiltrarUsuarios)
                            .addComponent(btnModificarUsuario, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(pestanaUsuariosLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        jTabbedPane.addTab("Usuarios", pestanaUsuarios);

        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 453, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnSalir)
                .addGap(15, 15, 15))
        );

        jTabbedPane.getAccessibleContext().setAccessibleName("Grados");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodigoActionPerformed
        
    }//GEN-LAST:event_txtCodigoActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        int index = tablaGrados.getSelectedRow();
        ModeloTablaGrados mTablaGrados = (ModeloTablaGrados) tablaGrados.getModel();
        switch(btnGuardar.getText().toLowerCase()){
            case "modificar":
                grados.get(index).setCodigo(txtCodigo.getText());
                grados.get(index).setNombre(txtNombre.getText());
                fa.modificarGrado(grados.get(index));
                break;
            default:
                Grado gr = new Grado(txtNombre.getText(), txtCodigo.getText());
                fa.insertarGrado(gr);
                grados.add(gr);
                index = tablaGrados.getRowCount()-1;
                break;
        }
        mTablaGrados.setFilas(this.grados);
        tablaGrados.setRowSelectionInterval(index, index);
        btnGuardar.setText("Modificar");
        btnBorrar.setEnabled(true);
        btnBuscar.setEnabled(false);
        btnGuardar.setEnabled(false);
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnAnadirUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnadirUsuarioActionPerformed
        Grado gr=null;
        Bloque bl=null;
        boolean bien = false;
        switch(comboBoxUsuario.getSelectedIndex()){
            case 1:
                for(Grado g:grados) 
                    if(g.getNombre().equals(comboBox1.getSelectedItem())) 
                        gr = g;
                if(gr!=null){
                    Alumno al = new Alumno(txtNombreUsuario.getText(), txtDniUsurio.getText(), txtCorreoUsuario.getText(), new Timestamp(System.currentTimeMillis()), "default",gr.getCodigo() );
                    bien = fa.insertarAlumno(al);
                    usuarios.add(al);
                }
                break;
            case 2:
                for(Bloque b:bloques) if(b.getNombre().equalsIgnoreCase(((String) comboBox1.getSelectedItem()))) bl=b;
                for(Grado g:grados) if(g.getNombre().equals(comboBox2.getSelectedItem())) gr = g;
                if(gr!=null&&bl!=null){
                    Profesor p = new Profesor(txtNombreUsuario.getText(), txtDniUsurio.getText(), txtCorreoUsuario.getText(), new Timestamp(System.currentTimeMillis()), "default", gr.getCodigo(), bl.getNombre());
                    bien = fa.insertarProfesro(p);
                    usuarios.add(p);
                }
                break;
            case 3:
                for(Grado g:grados)
                    if(g.getNombre().equals(comboBox1.getSelectedItem())) 
                        gr = g;
                if(gr!=null){
                    Administrador ad = new Administrador(txtNombreUsuario.getText(), txtDniUsurio.getText(), txtCorreoUsuario.getText(), new Timestamp(System.currentTimeMillis()),"default");
                    bien = fa.insertarAdministrador(ad);
                    usuarios.add(ad);
                }
                break;
        }
        if(bien){
            ((ModeloTablaUsuarios) tablaUsuarios.getModel()).setFilas(usuarios);
            tablaUsuarios.setRowSelectionInterval(tablaUsuarios.getRowCount()-1, tablaUsuarios.getRowCount()-1);
        }
    }//GEN-LAST:event_btnAnadirUsuarioActionPerformed

    private void tablaGradosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaGradosMouseClicked
        btnBuscar.setEnabled(false);
        btnGuardar.setEnabled(false);
        btnBorrar.setEnabled(true);
        btnGuardar.setText("Modificar");
        Grado gr = grados.get(tablaGrados.getSelectedRow());
        txtCodigo.setText(gr.getCodigo());
        txtNombre.setText(gr.getNombre());
    }//GEN-LAST:event_tablaGradosMouseClicked

    private void txtNombreInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_txtNombreInputMethodTextChanged
        
    }//GEN-LAST:event_txtNombreInputMethodTextChanged

    private void txtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreActionPerformed
        
    }//GEN-LAST:event_txtNombreActionPerformed

    private void tablaUsuariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaUsuariosMouseClicked
        btnAnadirUsuario.setEnabled(false);
        btnModificarUsuario.setEnabled(false);
        btnBorrarUsuario.setEnabled(true);
        Usuario user = usuarios.get(tablaUsuarios.getSelectedRow());
        txtDniUsurio.setText(user.getDni());
        txtNombreUsuario.setText(user.getNombre());
        txtCorreoUsuario.setText(user.getCorreo());
        if(user instanceof Alumno){
                comboBoxUsuario.setSelectedIndex(1);
                comboBox1.setEnabled(true);
                comboBox2.setEnabled(false);
                labelCombobox1.setText("Grados :");
//                comboBox1.removeItem(ABORT); hacer que se actualice cada vez que se selcciona para que al aÃ±adir un grado nuevo aparezca en la combobox
                for(int i=0;i<grados.size();i++) if(grados.get(i).getCodigo().equalsIgnoreCase(((Alumno) user).getGrado())) comboBox1.setSelectedIndex(i+1);
        }else if(user instanceof Profesor){
                comboBoxUsuario.setSelectedIndex(2);
                comboBox1.setEnabled(true);
                labelCombobox1.setText("Bloques :");
                this.bloques = fa.ConsultarBloques("", "", "");
                for(Bloque gra:bloques) comboBox1.addItem(gra.toString());
                for(int i=0;i<bloques.size();i++) if(bloques.get(i).getNombre().equalsIgnoreCase(((Profesor) user).getBloqueAsociado())) comboBox1.setSelectedIndex(i+1);
        }else if(user instanceof Administrador){
                comboBoxUsuario.setSelectedIndex(3);
                comboBox1.setEnabled(false);
                comboBox2.setEnabled(false);
        }
        else comboBoxUsuario.setSelectedIndex(0);
    }//GEN-LAST:event_tablaUsuariosMouseClicked

    private void txtDniUsurioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDniUsurioActionPerformed
        
    }//GEN-LAST:event_txtDniUsurioActionPerformed

    private void txtNombreUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreUsuarioActionPerformed
        
    }//GEN-LAST:event_txtNombreUsuarioActionPerformed

    private void txtCorreoUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCorreoUsuarioActionPerformed
        
    }//GEN-LAST:event_txtCorreoUsuarioActionPerformed

    private void comboBoxUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxUsuarioActionPerformed
        if(!coincidenValoresUsuario()){
            if(!btnAnadirUsuario.isEnabled()) btnModificarUsuario.setEnabled(true);
            btnBorrarUsuario.setEnabled(false);
        }else{
            btnAnadirUsuario.setEnabled(false);
            btnModificarUsuario.setEnabled(false);
            btnBorrarUsuario.setEnabled(true);
        }
        if(comboBoxUsuario.getSelectedIndex()==2){
            this.bloques = fa.ConsultarBloques("", "", "");
            comboBox1.removeAllItems();
            comboBox1.addItem("");
            labelCombobox1.setText("Bloques :");
            for(Bloque gra:bloques) comboBox1.addItem(gra.toString());
            comboBox1.setSelectedIndex(0);
        }else{
            labelCombobox1.setText("Grados :");
            comboBox2.setEnabled(false);
            comboBox1.removeAllItems();
            comboBox1.addItem("");
            for(Grado gra:grados) comboBox1.addItem(gra.toString());
        }
        if(comboBox1.getSelectedIndex()!=0){
            labelCombobox2.setText("Grados :");
            comboBox2.setEnabled(true);
            comboBox2.removeAllItems();
            comboBox2.addItem("");
            for(Grado gra:grados) comboBox2.addItem(gra.toString());
        }
    }//GEN-LAST:event_comboBoxUsuarioActionPerformed

    private void btnBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarActionPerformed
        int index = tablaGrados.getSelectedRow();
        fa.borrarGrado(grados.get(index));
        grados.remove(index);
        ModeloTablaGrados mTablaGrados = (ModeloTablaGrados) tablaGrados.getModel();
        mTablaGrados.setFilas(grados);
        tablaGrados.setRowSelectionInterval(0, 0);
        txtCodigo.setText(grados.get(0).getCodigo());
        txtNombre.setText(grados.get(0).getNombre());
    }//GEN-LAST:event_btnBorrarActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnCorreoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCorreoActionPerformed
            fa.abrirCorreo(administrador.getCorreo());
    }//GEN-LAST:event_btnCorreoActionPerformed

    private void txtCorreoUsuarioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCorreoUsuarioKeyTyped
        if(!coincidenValoresUsuario()){
            btnAnadirUsuario.setEnabled(true);
            btnModificarUsuario.setEnabled(false);
            btnBorrarUsuario.setEnabled(false);
            btnFiltrarUsuarios.setEnabled(true);
        }else{
            btnAnadirUsuario.setEnabled(false);
            btnModificarUsuario.setEnabled(false);
            btnBorrarUsuario.setEnabled(true);
        }
    }//GEN-LAST:event_txtCorreoUsuarioKeyTyped

    private void txtNombreUsuarioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreUsuarioKeyTyped
        if(!coincidenValoresUsuario()){
            if(!btnAnadirUsuario.isEnabled()) btnModificarUsuario.setEnabled(true);
            btnBorrarUsuario.setEnabled(false);
        }else{
            btnAnadirUsuario.setEnabled(false);
            btnModificarUsuario.setEnabled(false);
            btnBorrarUsuario.setEnabled(true);
        }
    }//GEN-LAST:event_txtNombreUsuarioKeyTyped

    private void txtDniUsurioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDniUsurioKeyTyped
        if(!coincidenValoresUsuario()){
            if(!btnAnadirUsuario.isEnabled()) btnModificarUsuario.setEnabled(true);
            btnBorrarUsuario.setEnabled(false);
        }else{
            btnAnadirUsuario.setEnabled(false);
            btnModificarUsuario.setEnabled(false);
            btnBorrarUsuario.setEnabled(true);
        }
    }//GEN-LAST:event_txtDniUsurioKeyTyped

    private void txtNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreKeyTyped
        if(!coincidenValoresGrado()){
            if(!btnBuscar.isEnabled()) btnBuscar.setEnabled(true);
            btnGuardar.setEnabled(true);
            btnBorrar.setEnabled(false);
        }else{
            btnBuscar.setEnabled(false);
            btnGuardar.setEnabled(false);
            btnBorrar.setEnabled(true);
            btnGuardar.setText("Modificar");
        }
    }//GEN-LAST:event_txtNombreKeyTyped

    private void txtCodigoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoKeyTyped
        if(!coincidenValoresGrado()){
            btnBuscar.setEnabled(true);
            btnGuardar.setEnabled(true);
            btnBorrar.setEnabled(false);
            btnGuardar.setText("Nuevo");
        }else{
            btnBuscar.setEnabled(false);
            btnGuardar.setEnabled(false);
            btnBorrar.setEnabled(true);
            btnGuardar.setText("Modificar");
        }
    }//GEN-LAST:event_txtCodigoKeyTyped

    private void comboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBox1ActionPerformed
        if(!coincidenValoresUsuario()){
            if(!btnAnadirUsuario.isEnabled()) btnModificarUsuario.setEnabled(true);
            btnBorrarUsuario.setEnabled(false);
        }else{
            btnAnadirUsuario.setEnabled(false);
            btnModificarUsuario.setEnabled(false);
            btnBorrarUsuario.setEnabled(true);
        }
    }//GEN-LAST:event_comboBox1ActionPerformed

    private void comboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBox2ActionPerformed
        if(!coincidenValoresUsuario()){
            if(!btnAnadirUsuario.isEnabled()) btnModificarUsuario.setEnabled(true);
            btnBorrarUsuario.setEnabled(false);
        }else{
            btnAnadirUsuario.setEnabled(false);
            btnModificarUsuario.setEnabled(false);
            btnBorrarUsuario.setEnabled(true);
        }
    }//GEN-LAST:event_comboBox2ActionPerformed

    private void btnBorrarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarUsuarioActionPerformed
        if(fa.eliminarAlumno(((Alumno) usuarios.get(tablaUsuarios.getSelectedRow())))){
            usuarios.remove(tablaGrados.getSelectedRow());
            ((ModeloTablaUsuarios) tablaUsuarios.getModel()).eliminarFila(tablaUsuarios.getSelectedRow());
            tablaUsuarios.setRowSelectionInterval(0, 0);
        }
    }//GEN-LAST:event_btnBorrarUsuarioActionPerformed

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAnadirUsuario;
    private javax.swing.JButton btnBorrar;
    private javax.swing.JButton btnBorrarUsuario;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCorreo;
    private javax.swing.JButton btnFiltrarUsuarios;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnModificarUsuario;
    private javax.swing.JButton btnSalir;
    private javax.swing.JComboBox<String> comboBox1;
    private javax.swing.JComboBox<String> comboBox2;
    private javax.swing.JComboBox<String> comboBoxUsuario;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane;
    private javax.swing.JLabel labelCombobox1;
    private javax.swing.JLabel labelCombobox2;
    private javax.swing.JPanel pestanaUsuarios;
    private javax.swing.JTable tablaGrados;
    private javax.swing.JTable tablaUsuarios;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtCorreoUsuario;
    private javax.swing.JTextField txtDniUsurio;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtNombreUsuario;
    // End of variables declaration//GEN-END:variables
    private boolean coincidenValoresGrado(){
        if(grados.get(tablaGrados.getSelectedRow()).getCodigo().equalsIgnoreCase(txtCodigo.getText()))
            if(grados.get(tablaGrados.getSelectedRow()).getNombre().equalsIgnoreCase(txtNombre.getText()))
                return true;
        return false;
    }
    
    private boolean coincidenValoresUsuario(){
        if(usuarios.get(tablaUsuarios.getSelectedRow()).getCorreo().equalsIgnoreCase(txtCorreoUsuario.getText()))
            if(usuarios.get(tablaUsuarios.getSelectedRow()).getDni().equalsIgnoreCase(txtDniUsurio.getText()))
                if(usuarios.get(tablaUsuarios.getSelectedRow()).getNombre().equalsIgnoreCase(txtNombreUsuario.getText()))
                    if(usuarios.get(tablaUsuarios.getSelectedRow()) instanceof Alumno){
                        String idGrado  =((Alumno) usuarios.get(tablaUsuarios.getSelectedRow())).getGrado();
                        String nombreGrado="";
                        for(Grado gr:grados) if(gr.getCodigo().equals(idGrado)) nombreGrado = gr.getNombre();
                        if(nombreGrado.equalsIgnoreCase(((String) comboBox1.getSelectedItem())))
                            if(comboBoxUsuario.getSelectedItem().toString().equalsIgnoreCase("Alumno")) return true;
                    }
                    else if(usuarios.get(tablaUsuarios.getSelectedRow()) instanceof Profesor)
                        if(((Profesor) usuarios.get(tablaUsuarios.getSelectedRow())).getBloqueAsociado().equalsIgnoreCase(((String) comboBox1.getSelectedItem()))){
                            String idGrado  =((Profesor) usuarios.get(tablaUsuarios.getSelectedRow())).getGradoAsociado();
                            String nombreGrado="";
                            for(Grado gr:grados) if(gr.getCodigo().equals(idGrado)) nombreGrado = gr.getNombre();
                            if(nombreGrado.equalsIgnoreCase(((String) comboBox2.getSelectedItem())))
                                if(comboBoxUsuario.getSelectedItem().toString().equalsIgnoreCase("Profesor")) return true;
                        }
                    else if(usuarios.get(tablaUsuarios.getSelectedRow()) instanceof Administrador)
                        if(comboBoxUsuario.getSelectedItem().toString().equalsIgnoreCase("Administrador")) return true;
        return false;
    }
}
